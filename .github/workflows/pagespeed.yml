name: Build & Deploy PSI Dashboard

on:
  workflow_dispatch: {}
  schedule:
    - cron: "0 23 * * *" # 06:00 WIB

# Required so GITHUB_TOKEN can push to gh-pages
permissions:
  contents: write

concurrency:
  group: pagespeed-dashboard
  cancel-in-progress: false

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Detect if gh-pages exists (so we can restore history files)
      - name: Check if gh-pages exists
        id: ghp
        run: |
          if git ls-remote --exit-code --heads origin gh-pages >/dev/null 2>&1; then
            echo "exists=true" >> "$GITHUB_OUTPUT"
          else
            echo "exists=false" >> "$GITHUB_OUTPUT"
          fi

      # Only checkout gh-pages if it already exists
      - name: Checkout gh-pages (for history)
        if: steps.ghp.outputs.exists == 'true'
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages
          persist-credentials: false

      # Restore history.json & history/ if available
      - name: Restore history assets
        if: steps.ghp.outputs.exists == 'true'
        run: |
          set -e
          SRC="gh-pages"
          DEST="dashboard"
          mkdir -p "$DEST"
          if [ -f "$SRC/history.json" ]; then cp -f "$SRC/history.json" "$DEST/"; fi
          if [ -d "$SRC/history" ]; then rsync -a "$SRC/history/" "$DEST/history/"; fi

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run PSI Dashboard Script
        env:
          PSI_API_KEY: ${{ secrets.PSI_API_KEY }}
          LOCALE: "en"
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          mkdir -p dashboard
          python psi_csv_dashboard.py \
            --csv urls.csv \
            --out-csv psi_results.csv \
            --out-json psi_results.json \
            --out-html dashboard/dashboard.html

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: dashboard
          enable_jekyll: false
          commit_message: "deploy: PSI Dashboard (commit ${{ github.sha }})"
